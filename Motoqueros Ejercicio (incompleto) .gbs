function elMotoqueroPerteneceAUnClub() {
    /*
    PROPÓSITO: Indica si el motoquero actual pertenece a algún club.
    PRECONDICIÓN: Hay un motoquero en la celda actual.
    TIPO: Booleano.
    */
    if(hayMotoqueroAcá() && hayMotoqueroSinClub())
    {
    return()
    }
}

function clubAlQuePerteneceUnMotoquero() {
    /*
    PROPÓSITO: Describe el número del club al cual pertenece el motoquero actual.
    PRECONDICIÓN: Hay un motoquero en la celda actual y pertenece a un club.
    TIPO: Número.
    */
    if(hayMotoqueroAcá && elMotoqueroPerteneceAUnClub){
        return()
    }
    
}

procedure IncluirEnElClubNúmero_(númeroDeClub) {
    /*
    PROPÓSITO: Incluye al motoquero actual como perteneciente al club con el número dado.
    PRECONDICIÓN: Hay un motoquero en la celda actual y el mismo no pertenece todavía a ningún club.
    PARÁMETROS: númeroDeClub - Número. El número de club en el cual incluir al motoquero
    */
}

function hayMotoqueroAcá() {
    /*
    PROPÓSITO: Indica si hay un motoquero en la celda actual.
    PRECONDICIÓN: Ninguna.
    TIPO: Booleano.
    */
    return(hayMotoqueroAcá)
}

procedure cantidadDeClubesEnLaConvención() {
    /*
    PROPÓSITO: Describe el numero total de clubes de la convencion
    TIPO: numero.
    PRECONDICIÓN: Ningun motoquero en la convencion tiene aun club asignado.
    OBSERVACIONES: es un recorrido de procesamiento con acomulacion.
    sobre los motoqueros sin club de la convencion
    haciendo asignando un club incremental y consecuente a cada motoquero sin club y todos sus conectados
    */
    cantidadDeClubesAsignadosAlMomento := 0
    while( hayMotoqueroSinClub())
    {
        IrAMotoqueroSinClub()
        cantidadDeClubesAsignadosAlMomento := cantidadDeClubesAsignadosAlMomento +1
        AsignarClub_AMotoquerosConectados(cantidadDeClubesAsignadosAlMomento)
    }
    return(cantidadDeClubesAsignadosAlMomento)
}

function hayMotoqueroSinClub() {
        /*
    PROPÓSITO:  indica si en la convención hay algún motoquero que todavía no tenga un club.
    PRECONDICIÓN:-.
    TIPO: Booleano.
    OBSERVACIONES: es un recorrido de busqueda sin saber si hay
    sobre la celda del tablero
    buscando si hay una celda que tenga motoquero sin club
    */
    while(hayMotoqueroAcá)
    {
        
    }
}

procedure IrAMotoqueroSinClub() {
        /*
    PROPÓSITO:asumiendo que hay un motoquero sin club, posiciona el cabezal sobre el mismo.
    PRECONDICIÓN: Hay un motoquero en la celda actual y el mismo no pertenece todavía a ningún club.
    
    */
    if(hayMotoqueroSinClub)
    {
        Mover(hayMotoqueroAcá)
    }
}

procedure AsignarClub_AMotoquerosConectados(númeroDeClub) {
    /*
    PROPÓSITO:  Asigna al motoqueroi sin club de la celda actual y a todos sus conectados el club **numeroDeClub**.
    PARAMETROS:
    * númeroDeClub : Número - el numero de club a asignar.
    PRECONDICIÓN: hay un motoquero sin club en la celda actual.
    los conectados al motoquero no tiene club.
    númeroDeClub es mayor a cero.
    OBSERVACIONES: es un recorrido de busqueda sin saber si hay
    sobre la celda del tablero
    buscando si hay una celda que tenga motoquero sin club
    */
    hayMotoqueroSinClubConVecinoEn_
    IrHastaElMotoqueroSinClubConVecinoEn_
    
    IncluirEnElClubNumero_(númeroDeClub)
    while(hayMotoqueroSinClubConVecinoEn_(númeroDeClub){
        IrHastaElMotoqueroSinClubConVecinoEn_(númeroDeClub)
        IncluirEnElClubNumero_(númeroDeClub)
    }
}

function hayMotoqueroSinClubConVecinoEn_(númeroDeClub) {
    /*
    PROPÓSITO: indica si en la convención hay algún motoquero que todavía no tenga un club y sea vecino al club dado.
    PRECONDICIÓN:Que el motoquero no tenga club.
    TIPO: Booleano.
    OBSERVACIONES: es un recorrido de busqueda sin saber si hay
    sobre la celda del tablero
    buscando si hay una celda que tenga motoquero sin club
    */
    return()
}

procedure IrHastaElMotoqueroSinClubConVecinoEn_(númeroDeClub) {
    /*
    PROPÓSITO:  posiciona el cabezal sobre un motoquero que no tenga club todavía y que tenga por vecino un motoquero en el club **númeroDeClub**.
    PARAMETROS:
    * númeroDeClub : Número - el numero de club a asignar.
    PRECONDICIÓN: hay un motoquero sin club en la celda actual.
    los conectados al motoquero no tiene club.
    númeroDeClub es mayor a cero.
    OBSERVACIONES: es un recorrido de busqueda sin saber si hay
    sobre la celda del tablero
    buscando si hay una celda que tenga motoquero sin club
    */
}

function hayMotoquerosSinClubAca() {
    
}