program {
     /*PROPOSITO: el programa llama a un procedimiento con el nombre DibujarLaBandaGloriosaDeAncho_ que dibuja una banda diagonal de color Rojo de cuatro celdas de alto y de tantas celdas de largo como indique el parámetro **ancho** (dibujando hacia arriba y hacia la derecha).  
    PRECONDICIONES: Desde la celda actual debe haber desde la tercer celda al norte de la actual la misma cantidad de celdas hacia el norte que el valor dado en el **ancho** y hacia el este. 
    PARAMETROS:
    *ancho - Numero - celdas de ancho de la banda roja.
    */
    DibujarLaBandaGloriosaDeAncho_(6)
}

procedure DibujarLaBandaGloriosaDeAncho_(ancho) {
    /*PROPOSITO:  dibuja una banda diagonal de color Rojo de cuatro celdas de alto y de tantas celdas de largo como indique el parámetro **ancho** (dibujando hacia arriba y hacia la derecha).  
    PRECONDICIONES: Desde la celda actual debe haber desde la tercer celda al norte de la actual la misma cantidad de celdas hacia el norte que el valor dado en el **ancho** y hacia el este. 
    PARAMETROS:
    *ancho - Numero - celdas de ancho de la banda roja.
    */
    IrALaCeldaInicial()
    repeat (ancho - 1) {
    DibujarLineaRoja()
    PasarALaSiguienteLinea()
    }
    DibujarLineaRoja()
    IrALaCeldaInicial()
}
procedure IrALaCeldaInicial() {
    /*PROPOSITO: mueve el cabezal a la celda del margen inferior izquierdo del tablero.  
    PRECONDICIONES: -. 
    */
    IrAlBorde(Sur)
    IrAlBorde(Oeste)
}

procedure DibujarLineaRoja() {
    /*PROPOSITO:  dibuja una linea vertical de bolitas rojas de 4 celdas de alto.  
    PRECONDICIONES: Desde la celda actual debe haber 3 celdas hacia el norte.
    */
    repeat (3) {
        Poner(Rojo)
        Mover(Norte)
    }
    Poner(Rojo)
    
}

procedure PasarALaSiguienteLinea() {
    /*PROPOSITO: posiciona el cabezal hacia la celda correspondiente para seguir con la siguiente linea roja a dibujar.  
    PRECONDICIONES: Desde la celda actual debe haber una celda hacia la direccion norte y una celda hacia la direccion este.
    */
    repeat (2) {
        Mover(Sur)
    }
    Mover(Este)
}